apply plugin: 'com.android.application'

android {
    compileSdkVersion 29
    buildToolsVersion "29.0.3"
    defaultConfig {
        applicationId "com.biz.memo"
        minSdkVersion 22
        targetSdkVersion 29
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility = 1.8
        targetCompatibility = 1.8
    }

}



dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation 'com.google.android.material:material:1.1.0'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'
}

repositories {
    mavenCentral()
}

dependencies {
    implementation  'org.projectlombok:lombok:1.18.12'
    annotationProcessor 'org.projectlombok:lombok:1.18.12'

    testCompileOnly 'org.projectlombok:lombok:1.18.12'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.12'
}

dependencies {
    // 현재 app gradle에 변수속성을 설정하고 항목을 지정하는 방법
    def room_version = "2.2.2"
    def  archLifecycleVersion = '2.2.0-beta01'


    // $rootProject.속성
    // Project gradle에 ext 항목에 설정한 속성값을 가져와서 지정하는 방법
    implementation "androidx.room:room-runtime:$rootProject.roomVersion"
    annotationProcessor "androidx.room:room-compiler:$rootProject.roomVersion" // For Kotlin use kapt instead of annotationProcessor

    // android에서 MVVM을 활용하여 DB 조회내용을 화면에 View하는 용도로 사용하는
    // dependency
    implementation "androidx.lifecycle:lifecycle-extensions:$rootProject.archLifeVersion"
    annotationProcessor "androidx.lifecycle:lifecycle-compiler:$rootProject.archLifeVersion" // For Kotlin use kapt instead of annotationProcessor

    // optional - Kotlin Extensions and Coroutines support for Room
    implementation "androidx.room:room-ktx:$rootProject.roomVersion"

    // optional - RxJava support for Room
    implementation "androidx.room:room-rxjava2:$rootProject.roomVersion"

    // optional - Guava support for Room, including Optional and ListenableFuture
    implementation "androidx.room:room-guava:$rootProject.roomVersion"

    // Test helpers
    testImplementation "androidx.room:room-testing:$rootProject.roomVersion"

}
